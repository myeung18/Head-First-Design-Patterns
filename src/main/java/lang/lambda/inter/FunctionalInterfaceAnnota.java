package lang.lambda.inter;public class FunctionalInterfaceAnnota {    @FunctionalInterface    interface Cruncher {        int crunch(int i, int j);        default String role() {            return "worker";        }        static String defaultCountry() {            return "FR";        }    }    public int cruncherService(int i, int j, Cruncher cruncher) {        return cruncher.crunch(i, j);    }    public void useInterface() {        class MyCruncher implements Cruncher {            @Override            public int crunch(int i, int j) {                System.out.println(role());                return 0;            }        }        Cruncher cr = new MyCruncher();        cr.role();        System.out.println(Cruncher.defaultCountry());    }    public static void main(String[] args) {        FunctionalInterfaceAnnota anno = new FunctionalInterfaceAnnota();        int ans = anno.cruncherService(3, 4, (p, q) -> p * q);        System.out.println("answer: " + ans);    }}